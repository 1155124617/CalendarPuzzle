from classes.Brick import Brick

line_type = \
    [
        Brick([(0, 0), (0, 1), (0, 2), (0, 3)], "\033[1;37;40m"),
        Brick([(0, 0), (1, 0), (2, 0), (3, 0)], "\033[1;37;40m")
    ]

four_z_type = \
    [
        Brick([(0, 0), (1, 0), (1, 1), (2, 1)], "\033[1;37;41m"),
        Brick([(0, 1), (0, 2), (1, 0), (1, 1)], "\033[1;37;41m"),
        Brick([(0, 1), (1, 0), (1, 1), (2, 0)], "\033[1;37;41m"),
        Brick([(0, 0), (0, 1), (1, 1), (1, 2)], "\033[1;37;41m")
    ]

four_l_type = \
    [
        Brick([(0, 1), (1, 1), (2, 0), (2, 1)], "\033[1;37;42m"),
        Brick([(0, 0), (1, 0), (1, 1), (1, 2)], "\033[1;37;42m"),
        Brick([(0, 0), (0, 1), (1, 0), (2, 0)], "\033[1;37;42m"),
        Brick([(0, 0), (0, 1), (0, 2), (1, 2)], "\033[1;37;42m"),
        Brick([(0, 0), (1, 0), (2, 0), (2, 1)], "\033[1;37;42m"),
        Brick([(0, 0), (0, 1), (0, 2), (1, 0)], "\033[1;37;42m"),
        Brick([(0, 0), (0, 1), (1, 1), (2, 1)], "\033[1;37;42m"),
        Brick([(0, 2), (1, 0), (1, 1), (1, 2)], "\033[1;37;42m")
    ]

t_type = \
    [
        Brick([(0, 0), (0, 1), (0, 2), (1, 1), (2, 1)], "\033[1;37;43m"),
        Brick([(0, 2), (1, 0), (1, 1), (1, 2), (2, 2)], "\033[1;37;43m"),
        Brick([(0, 1), (1, 1), (2, 0), (2, 1), (2, 2)], "\033[1;37;43m"),
        Brick([(0, 0), (1, 0), (1, 1), (1, 2), (2, 0)], "\033[1;37;43m")
    ]

bridge_type = \
    [
        Brick([(0, 0), (0, 1), (0, 2), (1, 0), (1, 2)], "\033[1;37;44m"),
        Brick([(0, 0), (0, 1), (1, 1), (2, 0), (2, 1)], "\033[1;37;44m"),
        Brick([(0, 0), (0, 2), (1, 0), (1, 1), (1, 2)], "\033[1;37;44m"),
        Brick([(0, 0), (0, 1), (1, 0), (2, 0), (2, 1)], "\033[1;37;44m")
    ]

equal_l_type = \
    [
        Brick([(0, 0), (1, 0), (2, 0), (2, 1), (2, 2)], "\033[1;37;45m"),
        Brick([(0, 0), (0, 1), (0, 2), (1, 0), (2, 0)], "\033[1;37;45m"),
        Brick([(0, 0), (0, 1), (0, 2), (1, 2), (2, 2)], "\033[1;37;45m"),
        Brick([(0, 2), (1, 2), (2, 0), (2, 1), (2, 2)], "\033[1;37;45m"),

    ]

five_l_type = \
    [
        Brick([(0, 1), (1, 1), (2, 1), (3, 0), (3, 1)], "\033[1;37;46m"),
        Brick([(0, 0), (1, 0), (1, 1), (1, 2), (1, 3)], "\033[1;37;46m"),
        Brick([(0, 0), (0, 1), (1, 0), (2, 0), (3, 0)], "\033[1;37;46m"),
        Brick([(0, 0), (0, 1), (0, 2), (0, 3), (1, 3)], "\033[1;37;46m"),
        Brick([(0, 0), (1, 0), (2, 0), (3, 0), (3, 1)], "\033[1;37;46m"),
        Brick([(0, 0), (0, 1), (0, 2), (0, 3), (1, 0)], "\033[1;37;46m"),
        Brick([(0, 0), (0, 1), (1, 1), (2, 1), (3, 1)], "\033[1;37;46m"),
        Brick([(0, 3), (1, 0), (1, 1), (1, 2), (1, 3)], "\033[1;37;46m")
    ]

five_equal_z_type = \
    [
        Brick([(0, 0), (0, 1), (1, 1), (2, 1), (2, 2)], "\033[1;31;40m"),
        Brick([(0, 2), (1, 0), (1, 1), (1, 2), (2, 0)], "\033[1;31;40m"),
        Brick([(0, 0), (1, 0), (1, 1), (1, 2), (2, 2)], "\033[1;31;40m"),
        Brick([(0, 1), (0, 2), (1, 1), (2, 0), (2, 1)], "\033[1;31;40m")
    ]

five_unequal_z_type = \
    [
        Brick([(0, 0), (0, 1), (1, 1), (1, 2), (1, 3)], "\033[1;32;40m"),
        Brick([(0, 1), (1, 0), (1, 1), (2, 0), (3, 0)], "\033[1;32;40m"),
        Brick([(0, 0), (0, 1), (0, 2), (1, 2), (1, 3)], "\033[1;32;40m"),
        Brick([(0, 1), (1, 1), (2, 0), (2, 1), (3, 0)], "\033[1;32;40m"),
        Brick([(0, 1), (0, 2), (0, 3), (1, 0), (1, 1)], "\033[1;32;40m"),
        Brick([(0, 0), (1, 0), (1, 1), (2, 1), (3, 1)], "\033[1;32;40m"),
        Brick([(0, 2), (0, 3), (1, 0), (1, 1), (1, 2)], "\033[1;32;40m"),
        Brick([(0, 0), (1, 0), (2, 0), (2, 1), (3, 1)], "\033[1;32;40m")
    ]

two_square_type = \
    [
        Brick([(0, 0), (0, 1), (0, 2), (1, 0), (1, 1)], "\033[1;33;40m"),
        Brick([(0, 0), (0, 1), (1, 0), (1, 1), (2, 1)], "\033[1;33;40m"),
        Brick([(0, 1), (0, 2), (1, 0), (1, 1), (1, 2)], "\033[1;33;40m"),
        Brick([(0, 0), (1, 0), (1, 1), (2, 0), (2, 1)], "\033[1;33;40m"),
        Brick([(0, 0), (0, 1), (1, 0), (1, 1), (2, 0)], "\033[1;33;40m"),
        Brick([(0, 0), (0, 1), (0, 2), (1, 1), (1, 2)], "\033[1;33;40m"),
        Brick([(0, 1), (1, 0), (1, 1), (2, 0), (2, 1)], "\033[1;33;40m"),
        Brick([(0, 0), (0, 1), (1, 0), (1, 1), (1, 2)], "\033[1;33;40m")
    ]